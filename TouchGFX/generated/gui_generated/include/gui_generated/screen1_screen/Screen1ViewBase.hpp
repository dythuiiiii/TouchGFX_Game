/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN1VIEWBASE_HPP
#define SCREEN1VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/containers/progress_indicators/BoxProgress.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase();
    virtual void setupScreen();

    /*
     * Custom Actions
     */
    virtual void action1()
    {
        // Override and implement this function in Screen1
    }
    

    /*
     * Virtual Action Handlers
     */
    virtual void BoxBorder()
    {
        // Override and implement this function in Screen1
    }
    virtual void Up_Button_Click()
    {
        // Override and implement this function in Screen1
    }
    virtual void Down_Button_Click()
    {
        // Override and implement this function in Screen1
    }
    virtual void Left_Button_Click()
    {
        // Override and implement this function in Screen1
    }
    virtual void Right_Button_Click()
    {
        // Override and implement this function in Screen1
    }
    virtual void Retry_Function()
    {
        // Override and implement this function in Screen1
    }
    virtual void Exit_Function()
    {
        // Override and implement this function in Screen1
    }
    virtual void Setting_Button_Click()
    {
        // Override and implement this function in Screen1
    }
    virtual void Block_Collide_Button_Click()
    {
        // Override and implement this function in Screen1
    }
    virtual void Float_Button_Click()
    {
        // Override and implement this function in Screen1
    }
    virtual void Collide_Button_Click()
    {
        // Override and implement this function in Screen1
    }
    virtual void Fast_Button_Click()
    {
        // Override and implement this function in Screen1
    }
    virtual void Block_Float_Button_Click()
    {
        // Override and implement this function in Screen1
    }
    virtual void Home_Button_Click()
    {
        // Override and implement this function in Screen1
    }
    virtual void Exit_Home_Click()
    {
        // Override and implement this function in Screen1
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box game_background_over;
    touchgfx::Button on_button;
    touchgfx::BoxProgress boxProgress1;
    touchgfx::Box game_outside;
    touchgfx::ScalableImage game_background;
    touchgfx::TextAreaWithOneWildcard Score_text;
    touchgfx::TextAreaWithOneWildcard high_score_text;
    touchgfx::ScalableImage head_right;
    touchgfx::ScalableImage head_up;
    touchgfx::ScalableImage head_down;
    touchgfx::ScalableImage head_left;
    touchgfx::ScalableImage food;
    touchgfx::Button right_button;
    touchgfx::Button left_button;
    touchgfx::Button down_button;
    touchgfx::Button up_button;
    touchgfx::Button retry;
    touchgfx::Button Exit;
    touchgfx::Container MyContainer;
    touchgfx::Box up_box;
    touchgfx::Box down_box;
    touchgfx::Box right_box;
    touchgfx::Box left_box;
    touchgfx::ScalableImage food_score_image;
    touchgfx::ScalableImage start_game_snake;
    touchgfx::Button start_button;
    touchgfx::Button setting_button;
    touchgfx::ScalableImage loading_image;
    touchgfx::Box setting_screen;
    touchgfx::Button home_button;
    touchgfx::Container Setting_Container;
    touchgfx::TextArea collide_text;
    touchgfx::TextArea fast_text;
    touchgfx::TextArea float_text;
    touchgfx::ToggleButton fast_button;
    touchgfx::ToggleButton collide_button;
    touchgfx::ToggleButton float_button;
    touchgfx::Container Block_Collide_Container;
    touchgfx::Box Block_Collide_Screen;
    touchgfx::TextArea Block_Collide_Text;
    touchgfx::Button Block_Collide_Button;
    touchgfx::Container Block_Float_Container;
    touchgfx::Box Block_Float_Screen;
    touchgfx::TextArea Block_Float_Text;
    touchgfx::Button Block_Float_Button;
    touchgfx::ScalableImage food_game_over;
    touchgfx::TextAreaWithOneWildcard score_game_over_text;
    touchgfx::TextAreaWithOneWildcard high_score_game_over_text;
    touchgfx::Button exit_home;
    touchgfx::ScalableImage setting_label_image;
    touchgfx::ScalableImage error_label_image;
    touchgfx::ScalableImage high_score_game_over;
    touchgfx::ScalableImage high_score_image;
    touchgfx::TextArea game_over;

    /*
     * Wildcard Buffers
     */
    static const uint16_t SCORE_TEXT_SIZE = 10000;
    touchgfx::Unicode::UnicodeChar Score_textBuffer[SCORE_TEXT_SIZE];
    static const uint16_t HIGH_SCORE_TEXT_SIZE = 10000;
    touchgfx::Unicode::UnicodeChar high_score_textBuffer[HIGH_SCORE_TEXT_SIZE];
    static const uint16_t SCORE_GAME_OVER_TEXT_SIZE = 10000;
    touchgfx::Unicode::UnicodeChar score_game_over_textBuffer[SCORE_GAME_OVER_TEXT_SIZE];
    static const uint16_t HIGH_SCORE_GAME_OVER_TEXT_SIZE = 10000;
    touchgfx::Unicode::UnicodeChar high_score_game_over_textBuffer[HIGH_SCORE_GAME_OVER_TEXT_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen1ViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // SCREEN1VIEWBASE_HPP
